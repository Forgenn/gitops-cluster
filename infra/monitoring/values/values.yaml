alertmanager:
  enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi

grafana:
  enabled: true
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-user
    passwordKey: admin-password

  additionalSecrets:
    - name: grafana-oidc-credentials
      mountPath: /etc/grafana/secrets
      readOnly: true

  grafana.ini:
    server:
      root_url: https://grafana.monederobox.dev
    auth:
      disable_login_form: true
    auth.generic_oauth:
      enabled: true
      name: PocketID
      icon: signin
      allow_sign_up: true
      client_id: ${__file:/etc/grafana/secrets/oidc-client-id}
      client_secret: ${__file:/etc/grafana/secrets/oidc-client-secret}
      scopes: openid profile email groups
      auth_url: https://pocket-id.monederobox.dev/protocol/openid-connect/auth
      token_url: https://pocket-id.monederobox.dev/protocol/openid-connect/token
      api_url: https://pocket-id.monederobox.dev/protocol/openid-connect/userinfo
      role_attribute_path: "contains(groups, 'GrafanaAdmins') && 'Admin' || 'Viewer'"

  persistence:
    enabled: true
    type: pvc
    storageClassName: longhorn
    accessModes:
      - ReadWriteMany
    size: 1Gi
  resources:
    requests:
      cpu: 25m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"

prometheus:
  enabled: true
  prometheusSpec:
    retention: 24h
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteMany"]
          resources:
            requests:
              storage: 5Gi
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi

prometheusOperator:
  admissionWebhooks:
    enabled: false
    patch:
      enabled: false
  tls:
    enabled: false
  serviceMonitor:
    selfMonitor: false
  prometheusConfigReloader:
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 64Mi

kube-state-metrics:
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

nodeExporter:
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi
